{
  "extends": [
    "eslint:recommended", // enables a subset of core rules that report common problems
    "eslint:all", "plugin:react/all"
  ],
  "settings": {
    "import/resolver": {
      "webpack": {
        "config": "webpack.common.js"
      }
    },
    "import/ignore": ["node_modules"],
    "react": {
      "version": "detect"
    }
  },
  "plugins": [
    "react",
    "jsx-a11y",
    "import"
  ],
  "parserOptions": {
    "ecmaVersion": 7,
    "sourceType": "module", // code is in ECMAScript modules, not scripts
    "ecmaFeatures": {
      "jsx": true,
      "experimentalObjectRestSpread": true // allow destructuring/spread for objects, eg: { x, y, ...z }
    }
  },
  "parser": "babel-eslint",
  "env": {
    "amd": true, // enable require() and define() as global variables as per the amd spec
    "browser": true, // enable browser global variables
    "es6": true, // enable all ECMAScript 6 features (except for modules)
    "jest": true // enable all Jest features (ex: `expect()` & `test()`)
  },
  "rules": {

    //
    // adjust some questionable eslint:recommended defaults
    // Severity: 0=off, 1=warning, 2=error
    //
    "arrow-parens": 1,
    "brace-style": [2, "1tbs", { "allowSingleLine": true }],
    "comma-dangle": [2, "only-multiline"],
    "eol-last": 0, // dont enforce at least one newline at the end of files
    "no-console": 1, // disallow use of console
    "no-constant-condition": 0, // allow while (true) and the like
    "no-debugger": 1, // disallow use of debugger
    "no-duplicate-imports": 2,
    "no-empty-function": 1,
    "no-prototype-builtins": 0,
    "no-tabs": 1, // use spaces, not tabs.
    "no-trailing-spaces": 1, // disallow trailing whitespace at the end of lines
    "no-unneeded-ternary": 1,
    "no-unused-vars": [1, { "vars": "all", "args": "after-used" }], // disallow declaration of variables that are not used in the code
    "no-use-before-define": 1,
    "no-useless-constructor": 2,
    "no-var": 2, // require let or const instead of var
    "no-whitespace-before-property": 1,
    "object-curly-spacing": 1,
    "object-shorthand": 0,
    "prefer-const": 1,
    "quotes": 0, // specify whether double or single quotes should be used
    "require-yield": 1,
    "semi": [1, "always"], // require use of semicolons instead of automatic semicolon insertion
    "keyword-spacing": [2, {"after": true, "before": true}], // enforce spacing around keywords
    "space-before-blocks": 1, // prevent no space in `if (){`
    "space-before-function-paren": [2, "never"],
    "yield-star-spacing": 1,

    //
    // JSX specific
    //
    "jsx-quotes": [1, "prefer-double"], // Enforce quote style for JSX attributes,

    //
    // JSX Accessibility Specific
    //
    "jsx-a11y/anchor-has-content": 1,
    "jsx-a11y/aria-props": 1,
    "jsx-a11y/aria-proptypes": 1,
    "jsx-a11y/aria-role": 1,
    "jsx-a11y/aria-unsupported-elements": 1,
    "jsx-a11y/heading-has-content": 1,
    "jsx-a11y/html-has-lang": 1,
    "jsx-a11y/img-redundant-alt": 1,
    "jsx-a11y/lang": 1,
    "jsx-a11y/no-access-key": 1,
    "jsx-a11y/no-onchange": 1,
    "jsx-a11y/role-has-required-aria-props": 1,
    "jsx-a11y/role-supports-aria-props": 1,
    "jsx-a11y/scope": 1,
    "jsx-a11y/tabindex-no-positive": 1,

    //
    // eslint-plugin-react
    // React specific linting rules for ESLint
    //
    "react/display-name": [0, {"ignoreTranspilerName": false }], // Prevent missing displayName in a React component definition
    "react/jsx-boolean-value": 0, // Enforce boolean attributes notation in JSX
    "react/jsx-closing-bracket-location": 0, // Enforce the closing bracket location for JSX multiline elements
    "react/jsx-curly-spacing": 1, // Enforce or disallow spaces inside of curly braces in JSX attributes
    "react/jsx-equals-spacing": 1, // Enforce or disallow spaces around equal signs in JSX attributes
    "react/jsx-first-prop-new-line": [1, "multiline"], // Enforce position of the first prop in JSX
    "react/jsx-handler-names": 0, // Enforce event handler naming conventions in JSX
    "react/jsx-indent": [1, 2], // Validate JSX indentation
    "react/jsx-indent-props": [1, 2], // Validate props indentation in JSX
    "react/jsx-key": 1, // Detect missing key prop
    "react/jsx-max-props-per-line": 0, // Limit maximum of props on a single line in JSX
    "react/jsx-no-bind": 0, // No .bind() or Arrow Functions in JSX Props
    "react/jsx-no-duplicate-props": 1, // Prevent duplicate properties in JSX
    "react/jsx-no-literals": 0, // Prevent usage of unwrapped JSX strings
    "react/jsx-no-target-blank": 1, // Prevent usage of unsafe target='_blank'
    "react/jsx-no-undef": 1, // Disallow undeclared variables in JSX
    "react/jsx-pascal-case": 1, // Enforce PascalCase for user-defined JSX components
    "react/jsx-sort-props": 0, // Enforce props alphabetical sorting
    "react/jsx-sort-prop-types": 0, // Enforce propTypes declarations alphabetical sorting
    "react/jsx-space-before-closing": 0, // Validate spacing before closing bracket in JSX
    "react/jsx-uses-react": 1, // Prevent React to be incorrectly marked as unused
    "react/jsx-uses-vars": 1, // Prevent variables used in JSX to be incorrectly marked as unused
    "react/no-danger": 1, // Prevent usage of dangerous JSX properties
    "react/no-did-mount-set-state": 1, // Prevent usage of setState in componentDidMount
    "react/no-did-update-set-state": 1, // Prevent usage of setState in componentDidUpdate
    "react/no-direct-mutation-state": 1, // Prevent direct mutation of this.state
    "react/no-multi-comp": 0, // Prevent multiple component definition per file
    "react/no-unknown-property": 1, // Prevent usage of unknown DOM property
    "react/prefer-es6-class": 1, // Enforce ES6 classes for React Components
    "react/prop-types": 1, // Prevent missing props validation in a React component definition
    "react/react-in-jsx-scope": 1, // Prevent missing React when using JSX
    "react/require-extension": 0, // Import statements should not include a file extension
    "react/self-closing-comp": 0, // Prevent extra closing tags for components without children
    "react/sort-comp": 1, // Enforce component methods order
    "react/jsx-wrap-multilines": [
      1, {
        "declaration": "parens",
        "assignment": "parens",
        "return": "parens",
        "arrow": "ignore",
        "condition": "ignore",
        "logical": "ignore",
        "prop": "ignore"
      }
    ], // Prevent missing parentheses around multilines JSX

    // Ensure correct import resolution
    "import/no-unresolved": 1,
    "import/named": 1,
    "import/export": 1,
    "data-qa-selector": 1
  },
  "globals": {
    "fetch": false // whatwg-fetch polyfil is globally imported in webpack.config
  }
}

